<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.xicom.cms.service.mapper.BbsMapper">
    
    <resultMap type="default" id="default">
        <result property="regSeq"           column="REG_SEQ"        />
        <result property="regNm"            column="REG_NM"         />
        <result property="regDe"            column="REG_DE"         />
        <result property="regIp"            column="REG_IP"         />
        
        <result property="updSeq"           column="UPD_SEQ"        />
        <result property="updNm"            column="UPD_NM"         />
        <result property="updDe"            column="UPD_DE"         />
        <result property="updIp"            column="UPD_IP"         />
        
        <result property="stat"             column="STAT"           />
        
        <result property="authTyp"          column="TYPE"           />
        <result property="authSeq"          column="SEQ"            />
        <result property="authRwx"          column="RWX"            />
    </resultMap>


    <resultMap id="BbsVO" type="bbs" extends="default">
        <result property="bbsId"            column="BBS_ID"         />
        <result property="steId"            column="STE_ID"         />
        <result property="bbsNm"            column="BBS_NM"         />
        <result property="bbsTyp"           column="BBS_TYP"        />
        <result property="bbsDesc"          column="BBS_DESC"       />

        <result property="rpyAt"            column="RPY_AT"         />
        <result property="rpyOpnAt"         column="RPY_OPN_AT"     />
        <result property="cmtAt"            column="CMT_AT"         />
        <result property="ctgrAt"           column="CTGR_AT"        />
        <result property="tagAt"            column="TAG_AT"         />
        <result property="opnAt"            column="OPN_AT"         />
        <result property="snsAt"            column="SNS_AT"         />
        <result property="srchAt"           column="SRCH_AT"        />
        <result property="autoRegAt"        column="AUTO_REG_AT"    />
        
        <result property="notiAt"           column="NOTI_AT"        />                           
        <result property="notiDtAt"         column="NOTI_DT_AT"     />
        <result property="notiStrDt"        column="NOTI_STR_DT"    />
        <result property="notiEndDt"        column="NOTI_END_DT"    />
        <result property="attchAt"          column="ATTCH_AT"       />
        <result property="attchSz"          column="ATTCH_SZ"       />
        <result property="attchSzUnt"       column="ATTCH_SZ_UNT"   />
        <result property="attchCnt"         column="ATTCH_CNT"      />
        <result property="attchBkl"         column="ATTCH_BKL"      />
        <result property="attchWtl"         column="ATTCH_WTL"      />

        <result property="attchOdp"         column="ATTCH_ODP"      />
        <result property="attchExtAt"       column="ATTCH_EXT_AT"   />
        <result property="attchPath"        column="ATTCH_PATH"     />
        <result property="thumAt"           column="THUM_AT"        />
        <result property="thumExt"          column="THUM_EXT"       />
        <result property="thumStd"          column="THUM_STD"       />
        <result property="thumPath"         column="THUM_PATH"      />
        <result property="thumCreCyl"       column="THUM_CRE_CYL"   />
        <result property="thumCreAt"        column="THUM_CRE_AT"    />
        <result property="trcAt"            column="TRC_AT"         />

        <result property="movPath"          column="MOV_PATH"       />
        <result property="movThumCnt"       column="MOV_THUM_CNT"   />
        <result property="movExt"           column="MOV_EXT"        />
        <result property="movStd"           column="MOV_STD"        />
        <result property="movCreAt"         column="MOV_CRE_AT"     />
        <result property="trcCreCyl"        column="TRC_CRE_CYL"    />
        <result property="cpiAt"            column="CPI_AT"         />
        <result property="cpiTyp"           column="CPI_TYP"        />
        <result property="btm"              column="BTM"            />
    </resultMap>
    

    <insert id="addBbs" flushCache="true">
        INSERT INTO TB_BBS_DATA
        (
        BBS_NM,                 BBS_TY,             BBS_EXPLNT_1,               SYS_ID,
        STTS,                   REGSTR_SN,              REGIST_DATE,                    REGIST_IP_ADDR,             
        RSPNS_AT,                   RSPNS_BEGIN_AT,             NOTICE_AT,              NOTICE_DT_AT,           
        EXPLNT_SURC,                    CD_GRP_SURC,                TAG_AT,                 SEARCH_AT,          
        BEGIN_AT,                   SNS_AT,                 ATMC_REGIST_SURC,           ATCH_PATH,  
        ATCH_SURC,              ATCH_SIZE,              ATCH_SIZE_UNIT,         ATCH_REPR,
        ATCH_BACKUP,                ATCH_RCORDER,               ATCH_ODP,               ATCH_ESTN_SURC,
        THUM_AT,                THUM_EXTSN,             THUM_DRWU_DATE,             THUM_DRWU_AT,
        THUM_PATH,              TRSMS_AT,                   MVM_PATH,               MVM_THUM_CO,
        ESTN_MVM,               MVM_STTS,               MVM_CREAT_AT,               TRSMS_CREAT_CYCL,
        CMP_SURC,                   CMP_TY,             BBS_EXPLNT,                 UPDAT_DATE,
        UPDAT_SN,               UPDAT_IP_ADDR,                  THUM_DRWU_CYCL
        ) 
        VALUES
        (
        #{bbsNm},               #{bbsTyp},              #{bbsDesc},         #{steId},
        #{stat},                #{regSeq}::INT8,                NOW(),              #{regIp},               
        COALESCE(#{rpyAt}, 'N'),        COALESCE(#{rpyOpnAt}, 'N'), COALESCE(#{notiAt}, 'N'),   COALESCE(#{notiDtAt}, 'N'), 
        COALESCE(#{cmtAt}, 'N'),        COALESCE(#{ctgrAt}, 'N'),   COALESCE(#{tagAt}, 'N'),        COALESCE(#{srchAt}, 'N'),           
        COALESCE(#{opnAt}, 'N'),        COALESCE(#{snsAt}, 'N'),        COALESCE(#{autoRegAt}, 'N'),    #{attchPath},       
        COALESCE(#{attchAt},'N'),   #{attchSz}::INT8,               #{attchSzUnt},          #{attchCnt}::INT4,  
        #{attchBkl},            #{attchWtl},            #{attchOdp},            COALESCE(#{attchExtAt}, 'N'),
        COALESCE(#{thumAt}, 'N'),   #{thumExt},             #{thumStd},             COALESCE(#{thumCreAt}, 'N'),
        #{thumPath},            COALESCE(#{trcAt}, 'N'),        #{movPath},             #{movThumCnt}::INT4,
        #{movExt},              #{movStd},              COALESCE(#{movCreAt}, 'N'), #{trcCreCyl},
        COALESCE(#{cpiAt}, 'N'),        #{cpiTyp},              #{btm},                 NOW(),
        #{updSeq}::INT8,                #{updIp},               #{thumCreCyl}
        )
    <selectKey keyProperty="bbsId" resultType="integer" order="AFTER">
        SELECT MAX(BBS_ID) FROM TB_BBS_DATA 
    </selectKey>
    </insert>
    
    <select id="listBbs" resultMap="BbsVO">
        <!-- SELECT *
          FROM ( -->
                SELECT T.*<!-- , ROW_NUMBER() OVER(ORDER BY REG_DE DESC) AS RNUM        -->  
                  FROM (
                        SELECT BBS_ID       AS bbs_id               , 
                               BBS_NM       AS bbs_nm                   , 
                               BBS_TY       AS bbs_typ                  , 
                               REGSTR_SN    AS reg_seq                  , 
                               REGIST_DATE  AS reg_de                   ,
                               SYS_ID       AS ste_id                   ,
                               (SELECT empl_nm FROM tb_empl WHERE empl_sn = B.REGSTR_SN) as REG_NM,
                               STTS AS stat
                          FROM TB_BBS_DATA B
                         WHERE 1 = 1
                        <choose>
                        <when test="stat > 0">
                            AND STTS NOT IN ('0', '4', '8')
                        </when>
                        <otherwise>
                            AND STTS NOT IN ('1', '4', '9')
                        </otherwise>
                       </choose>
                         <if test="searchKeyword != ''">           
                           AND (BBS_NM LIKE CONCAT('%', #{searchKeyword} ,'%') OR BBS_TY LIKE CONCAT('%', #{searchKeyword}, '%') OR REGSTR_SN LIKE CONCAT('%', #{searchKeyword}, '%'))
                         </if>
                         <if test="steId !=''">
                             AND SYS_ID = #{steId}
                         </if>
                 ) T
         <!-- ) S --> WHERE 1 = 1
         <if test="pageIndex > 0">
          <!--  AND RNUM BETWEEN ((#{pageIndex} - 1) * #{pageUnit} ) + 1 AND ((#{pageIndex} - 1) * #{pageUnit} + #{pageUnit})  -->
           LIMIT #{pageUnit} OFFSET #{firstIndex}
         </if>
    </select>
    
    <select id="bbsCount" resultType="int">
        SELECT COUNT(1)
        FROM TB_BBS_DATA
        WHERE 1 = 1 
        <choose>
            <when test="stat > 0">
            AND STTS NOT IN ('0', '4', '8')
            </when>
            <otherwise>
            AND STTS NOT IN ('1', '4', '9')
            </otherwise>
        </choose>
        <if test="searchKeyword != ''">
         AND (BBS_NM LIKE CONCAT('%', #{searchKeyword} ,'%') OR BBS_TY LIKE CONCAT('%', #{searchKeyword}, '%') OR REGSTR_SN LIKE CONCAT('%', #{searchKeyword}, '%'))
        </if>
        <if test="steId !=''">
            AND SYS_ID = #{steId}
         </if>
    </select>
    
    <select id="getBbs" resultMap="BbsVO">
        SELECT 
            BBS_ID                  AS bbs_id
            , BBS_NM                AS bbs_nm
            , BBS_TY                AS bbs_typ
            , BBS_EXPLNT_1          AS bbs_desc
            , SYS_ID                AS ste_id
            , STTS                  AS stat
            , REGSTR_SN             AS reg_seq
            , REGIST_DATE           AS reg_de
            , REGIST_IP_ADDR        AS reg_ip
            , RSPNS_AT              AS rpy_at
            , RSPNS_BEGIN_AT        AS rpy_opn_at
            , NOTICE_AT             AS noti_at
            , NOTICE_DT_AT          AS noti_dt_at
            , EXPLNT_SURC           AS cmt_at
            , CD_GRP_SURC           AS ctgr_at
            , TAG_AT                AS tag_at
            , SEARCH_AT             AS srch_at
            , BEGIN_AT              AS opn_at
            , SNS_AT                AS sns_at
            , ATMC_REGIST_SURC      AS auto_reg_at
            , ATCH_PATH             AS attch_path
            , ATCH_SURC             AS attch_at
            , ATCH_SIZE             AS attch_sz
            , ATCH_SIZE_UNIT        AS attch_sz_unt
            , ATCH_REPR             AS attch_cnt
            , ATCH_BACKUP           AS attch_bkl
            , ATCH_RCORDER          AS attch_wtl
            , ATCH_ODP              AS attch_odp
            , ATCH_ESTN_SURC        AS attch_ext_at
            , THUM_AT               AS thum_at
            , THUM_EXTSN            AS thum_ext
            , THUM_DRWU_DATE        AS thum_std
            , THUM_DRWU_AT          AS thum_cre_at
            , THUM_PATH             AS thum_path
            , TRSMS_AT              AS trc_at
            , MVM_PATH              AS mov_path
            , MVM_THUM_CO           AS mov_thum_cnt
            , ESTN_MVM              AS mov_ext
            , MVM_STTS              AS mov_std
            , MVM_CREAT_AT          AS mov_cre_at
            , TRSMS_CREAT_CYCL      AS trc_cre_cyl
            , CMP_SURC              AS cpi_at
            , CMP_TY                AS cpi_typ
            , BBS_EXPLNT            AS btm
            , THUM_DRWU_AT          AS thum_cre_at
            , (
                SELECT
                    mbr_nm
                FROM
                    tb_mbr_data
                WHERE
                    mbr_sn = B.REGSTR_SN
            ) as REG_NM
            , UPDAT_DATE as upd_de
          FROM TB_BBS_DATA B
         WHERE 1 = 1
           AND BBS_ID = #{bbsId}::INT8
         
    </select>
    
    <update id="updateBbs">
        UPDATE TB_BBS_DATA SET 
            BBS_NM = #{bbsNm},              BBS_TY = #{bbsTyp},                 BBS_EXPLNT_1 = #{bbsDesc},                  SYS_ID = #{steId},
            STTS = #{stat},                 UPDAT_SN = #{updSeq}::INT8,                 UPDAT_DATE = NOW(),                         UPDAT_IP_ADDR = #{updIp},           
            RSPNS_AT = COALESCE(#{rpyAt}, 'N'), RSPNS_BEGIN_AT = COALESCE(#{rpyOpnAt}, 'N'),        NOTICE_AT = COALESCE(#{notiAt}, 'N'),               NOTICE_DT_AT = COALESCE(#{notiDtAt}, 'N'),          
            EXPLNT_SURC = COALESCE(#{cmtAt}, 'N'),  CD_GRP_SURC = COALESCE(#{ctgrAt}, 'N'),         TAG_AT = COALESCE(#{tagAt}, 'N'),               SEARCH_AT = COALESCE(#{srchAt}, 'N'),           
            BEGIN_AT = COALESCE(#{opnAt}, 'N'), SNS_AT = COALESCE(#{snsAt}, 'N'),           ATMC_REGIST_SURC = COALESCE(#{autoRegAt}, 'N'),     ATCH_PATH = #{attchPath},   
            ATCH_SURC = COALESCE(#{attchAt},'N'),   ATCH_SIZE = #{attchSz}::INT8,                   ATCH_SIZE_UNIT = #{attchSzUnt},             ATCH_REPR = #{attchCnt}::INT4,
            ATCH_BACKUP = #{attchBkl},      ATCH_RCORDER = #{attchWtl},             ATCH_ODP = #{attchOdp},                 ATCH_ESTN_SURC = COALESCE(#{attchExtAt}, 'N'),
            THUM_AT = COALESCE(#{thumAt}, 'N'), THUM_EXTSN = #{thumExt},                    THUM_DRWU_DATE = #{thumStd},                        THUM_DRWU_AT = COALESCE(#{thumCreAt}, 'N'),
            THUM_PATH = #{thumPath},        TRSMS_AT = COALESCE(#{trcAt}, 'N'),         MVM_PATH = #{movPath},                      MVM_THUM_CO = #{movThumCnt},
            ESTN_MVM = #{movExt},           MVM_STTS = #{movStd},                   MVM_CREAT_AT = COALESCE(#{movCreAt}, 'N'),          TRSMS_CREAT_CYCL = #{trcCreCyl},
            CMP_SURC = COALESCE(#{cpiAt}, 'N'), CMP_TY = #{cpiTyp},                 BBS_EXPLNT = #{btm},                                THUM_DRWU_CYCL = #{thumCreCyl}
        WHERE BBS_ID = #{bbsId}::INT8
        
    </update>
    
    <select id="getUC" resultType="egovMap">
        SELECT SUM(UC) UC, SUM(TC) TC FROM (
        SELECT 
            CASE STTS 
                WHEN '1' THEN  '1'
                WHEN '9' THEN  '1'
                ELSE '0'
            END AS UC,
            CASE STTS
                WHEN '8' THEN  '1'
                WHEN '0' THEN  '1'
                ELSE '0'
            END AS TC
        FROM TB_BBS_DATA 
        WHERE 1=1
        <if test="searchKeyword != ''">        
        AND (BBS_NM LIKE CONCAT('%', #{searchKeyword} ,'%') OR BBS_TY LIKE CONCAT('%', #{searchKeyword}, '%') OR REGSTR_SN LIKE CONCAT('%', #{searchKeyword}, '%'))
        </if>
        ) T 
    </select>
    
    <update id="updateStat">
        UPDATE TB_BBS_DATA SET 
            STTS = #{stat},
            UPDAT_DATE = NOW(),
            UPDAT_SN = #{updSeq}::INT8
        WHERE 1=1
             <choose>
                <when test="bbsId != 0">
                AND BBS_ID = #{bbsId}
                </when>
                <when test="chkNo.length > 0">
                AND BBS_ID IN 
                <foreach collection="chkNo" item="chkNo" index="index"  open="(" close=")" separator=",">
                #{chkNo}::INT8
                </foreach>
                </when>
            </choose>
    </update>
    
    <select id="getAuthList" resultType="egovMap">
        SELECT USER_TY   AS usr_typ 
        , USER_SN       AS usr_seq  
        , AUTH          AS rwx      
        , USER_NM       AS user_nm  
        FROM TB_BBS_AUTH_ WHERE BBS_ID = #{bbsId}::INT8
    </select>

</mapper>
